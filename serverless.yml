service: flights-webhook

plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs16.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sqs:SendMessage
            - "dynamodb:PutItem"
            - "dynamodb:Get*"
            - "dynamodb:Scan*"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
          Resource:
            - Fn::GetAtt: [receiverQueue, Arn]
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-sender-${sls:stage}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-receiver-${sls:stage}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-getFlights-${sls:stage}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-flightsTable-${sls:stage}
  environment:
    DYNAMODB_ORDERS_TABLE: ${self:service}-flightsTable-${sls:stage}

functions:
  sender:
    handler: handler.sender
    events:
      - http:
          method: post
          path: sender

  receiver:
    handler: handler.receiver
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - receiverQueue
              - Arn

  getFlights:
    handler: getFlights.getFlights
    events:
      - httpApi:
          path: /getFlights
          method: get

resources:
  Resources:
    receiverQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: receiverQueue

    flightsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: flightCode
            AttributeType: S
          - AttributeName: date
            AttributeType: S
          - AttributeName: originAirportId
            AttributeType: S
          - AttributeName: destinationAirportId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: flightCode
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: originDateIndex
            KeySchema:
              - AttributeName: originAirportId
                KeyType: HASH
              - AttributeName: date
                KeyType: RANGE
            Projection:
              ProjectionType: "ALL"
          - IndexName: destinationDateIndex
            KeySchema:
              - AttributeName: destinationAirportId
                KeyType: HASH
              - AttributeName: date
                KeyType: RANGE
            Projection:
              ProjectionType: "ALL"
        TableName: ${self:service}-flightsTable-${sls:stage}
